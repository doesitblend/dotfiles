set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'mileszs/ack.vim'                " Experimenting with ag, the silver searcher
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif


Plugin 'altercation/vim-colors-solarized'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
set background=dark
colorscheme solarized

" ================ File types ================================

set encoding=utf-8
filetype on          " enables filetype detection
filetype plugin on   " enables filetype specific pugins
filetype indent on   " enables filetype detection for indenting
syntax enable


" ================ Lines and cursors  ========================
"
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set gcr=a:blinkon0              "Disable cursor blink
" Display tabs and trailing spaces visually
set list listchars=tab:→\ ,trail:∙


" ================ Turn Off Swap Files ==============
"
set noswapfile
set nobackup
set nowritebackup


" ================ Persistent Undo ==================
" " Keep undo history across sessions, by storing in file.
" " Only works all the time.
"
let backupdir = expand('~/.vim/backups')
if !isdirectory(backupdir)
  call mkdir(backupdir)
  endif
  set undodir=~/.vim/backups
  set undofile

" ================ Indentation ======================
"
set autoindent
set smartindent
set smarttab

"I'm a spaces guy
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

set nowrap
set linebreak " Wrap lines at convenient points

let g:indent_guides_auto_colors = 1
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size  = 1


" ================ Folds ============================
" I like folding
set foldenable        "fold by default
set foldmethod=syntax


"================= enable powerline ====================
python from powerline.vim import setup as powerline_setup
python powerline_setup()
python del powerline_setup
set laststatus=2
